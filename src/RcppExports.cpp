// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// trainSESOM
NumericVector trainSESOM(NumericVector Data, NumericVector BMUs, NumericVector RadiusVector, int N, int DIM, double MinData, double MaxData, int Lines, int Columns, int Weights, bool toroid, int NumDataPerEpoch);
RcppExport SEXP _GeneralizedUmatrixGPU_trainSESOM(SEXP DataSEXP, SEXP BMUsSEXP, SEXP RadiusVectorSEXP, SEXP NSEXP, SEXP DIMSEXP, SEXP MinDataSEXP, SEXP MaxDataSEXP, SEXP LinesSEXP, SEXP ColumnsSEXP, SEXP WeightsSEXP, SEXP toroidSEXP, SEXP NumDataPerEpochSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Data(DataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type BMUs(BMUsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type RadiusVector(RadiusVectorSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type DIM(DIMSEXP);
    Rcpp::traits::input_parameter< double >::type MinData(MinDataSEXP);
    Rcpp::traits::input_parameter< double >::type MaxData(MaxDataSEXP);
    Rcpp::traits::input_parameter< int >::type Lines(LinesSEXP);
    Rcpp::traits::input_parameter< int >::type Columns(ColumnsSEXP);
    Rcpp::traits::input_parameter< int >::type Weights(WeightsSEXP);
    Rcpp::traits::input_parameter< bool >::type toroid(toroidSEXP);
    Rcpp::traits::input_parameter< int >::type NumDataPerEpoch(NumDataPerEpochSEXP);
    rcpp_result_gen = Rcpp::wrap(trainSESOM(Data, BMUs, RadiusVector, N, DIM, MinData, MaxData, Lines, Columns, Weights, toroid, NumDataPerEpoch));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_GeneralizedUmatrixGPU_trainSESOM", (DL_FUNC) &_GeneralizedUmatrixGPU_trainSESOM, 12},
    {NULL, NULL, 0}
};

RcppExport void R_init_GeneralizedUmatrixGPU(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
